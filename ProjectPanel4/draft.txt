// Load the data from the CSV file
d3.csv("main_data.csv")
  .then(function (data) {
    // Calculate the count for each "parent degrees" value
    var counts = {};
    data.forEach(function (d) {
      var customGroup = d["parent degrees"];
      counts[customGroup] = (counts[customGroup] || 0) + 1;
    });
    // Convert the data to an array for use in the pie chart
    var pieData = Object.entries(counts).map(function ([customGroup, customCount]) {
      return { customGroup, customCount };
    });

    // Define the width and height of the chart
    var customWidth = 400;
    var customHeight = 400;

    // Select the location to draw the chart
    var svg = d3
      .select("#o1")
      .append("svg")
      .attr("width", customWidth)
      .attr("height", customHeight)
      .append("g")
      .attr(
        "transform",
        "translate(" + customWidth / 2 + "," + customHeight / 2 + ")"
      );

    // Add a title to the top of the pie chart
    svg.append("text")
      .attr("x", 0) // Center the text
      .attr("y", -customHeight / 2 + 20) // Position the text at the top
      .attr("text-anchor", "middle")
      .style("font-size", "16px")
      .style("font-weight", "bold")
      .text("Proportion of Students by Parent's Degree");

    // Create a pie chart
    var pie = d3.pie().value(function (d) {
      return d.customCount;
    });

    var path = d3
      .arc()
      .outerRadius(customWidth / 3)
      .innerRadius(0);

    var color = d3.scaleOrdinal(d3.schemeCategory10);
    // Add tooltip
    var tooltip = d3
      .select("body")
      .append("div")
      .attr("class", "tooltip")
      .style("opacity", 0);
    var arc = svg
      .selectAll(".arc")
      .data(pie(pieData))
      .enter()
      .append("g")
      .attr("class", "arc");

    // Draw the elements of the pie chart
    arc
      .append("path")
      .attr("d", path)
      .attr("fill", function (d) {
        return color(d.data.customGroup);
      });

    // Add tooltips to each arc
    arc
      .append("path")
      .attr("d", path)
      .attr("fill", function (d) {
        return color(d.data.customGroup);
      })
      .on("mouseover", function (d) {
        // Display tooltip with group and proportion information
        tooltip.transition().duration(350).style("opacity", 0.9);
        tooltip
          .html(d.data.customGroup + "<br/>" + getPercentage(d, pieData) + "%")
          .style("left", d3.event.pageX + 10 + "px")
          .style("top", d3.event.pageY - 28 + "px");

        // Scale the path
        d3.select(this)
          .transition()
          .duration(350)
          .attr("transform", "scale(1.1)");
      })
      .on("mouseout", function (d) {
        // Hide tooltip on mouseout
        tooltip.transition().duration(500).style("opacity", 0);

        // Reset the scale
        d3.select(this)
          .transition()
          .duration(350)
          .attr("transform", "scale(1)");
      });
    function getPercentage(d, data) {
      var totalCount = data.reduce(function (acc, curr) {
        return acc + curr.customCount;
      }, 0);
      return ((d.data.customCount / totalCount) * 100).toFixed(2);
    }

    // Create legend
    var legend2 = d3
      .select("#o1") // Change the selection to the desired element
      .append("svg")
      .attr("width", customWidth)
      .attr("height", customHeight) // Adjust the height as needed
      .selectAll(".legend2")
      .data(pieData)
      .enter()
      .append("g")
      .attr("class", "legend2")
      .attr("transform", function (d, i) {
        return "translate(" + (customWidth - 100) + "," + (i * 20 + 10) + ")"; // Adjust the translation as needed
      });

    // Add colored squares to the legend
    legend2
      .append("rect")
      .attr("width", 18)
      .attr("height", 18)
      .attr("fill", function (d) {
        return color(d.customGroup);
      });

    // Add text labels to the legend
    legend2
      .append("text")
      .attr("x", -25)
      .attr("y", 9)
      .attr("dy", ".35em")
      .style("text-anchor", "end")
      .text(function (d) {
        return d.customGroup;
      });
});
i want add the toolstip for 2 chart that when i move mouse to 1 subjects in the pie chart, it will popup the percentage in pie chart and that part in the bar chart, for example when i move the mouse to the college part in pie chart , the college part in bar chart will popup